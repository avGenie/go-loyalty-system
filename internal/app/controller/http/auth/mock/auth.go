// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/controller/http/auth/auth.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	entity "github.com/avGenie/go-loyalty-system/internal/app/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockUserAuthenticator is a mock of UserAuthenticator interface.
type MockUserAuthenticator struct {
	ctrl     *gomock.Controller
	recorder *MockUserAuthenticatorMockRecorder
}

// MockUserAuthenticatorMockRecorder is the mock recorder for MockUserAuthenticator.
type MockUserAuthenticatorMockRecorder struct {
	mock *MockUserAuthenticator
}

// NewMockUserAuthenticator creates a new mock instance.
func NewMockUserAuthenticator(ctrl *gomock.Controller) *MockUserAuthenticator {
	mock := &MockUserAuthenticator{ctrl: ctrl}
	mock.recorder = &MockUserAuthenticatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserAuthenticator) EXPECT() *MockUserAuthenticatorMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockUserAuthenticator) CreateUser(ctx context.Context, user entity.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockUserAuthenticatorMockRecorder) CreateUser(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUserAuthenticator)(nil).CreateUser), ctx, user)
}
